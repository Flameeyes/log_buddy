var search_data = {"index":{"longSearchIndex":["lib/log_buddy.rb","logbuddy","logbuddy","logbuddy","logbuddy::utils","logbuddy::mixin","logbuddy::utils","logbuddy::gemlogger","logbuddy","logbuddy::gemlogger","logbuddy","logbuddy","logbuddy::mixin","logbuddy","logbuddy::utils","logbuddy::utils","logbuddy::utils","logbuddy::utils","files/license.html","files/readme_markdown.html","files/lib/log_buddy_rb.html","files/lib/log_buddy/gem_logger_rb.html","files/lib/log_buddy/mixin_rb.html","files/lib/log_buddy/utils_rb.html","files/lib/log_buddy/version_rb.html"],"info":[["LogBuddy","lib/log_buddy.rb","classes/LogBuddy.html"," < ","LogBuddy is a developer tool for easy logging while testing, debugging, and inspecting.    The log shortcut",1],["GemLogger","LogBuddy","classes/LogBuddy/GemLogger.html"," < ","",1],["Mixin","LogBuddy","classes/LogBuddy/Mixin.html"," < ","The main Mixin that gets added on the #init call ",1],["Utils","LogBuddy","classes/LogBuddy/Utils.html"," < ","",1],["arg_and_blk_debug","LogBuddy::Utils","classes/LogBuddy/Utils.html#M000006","(arg, blk)","",2],["d","LogBuddy::Mixin","classes/LogBuddy/Mixin.html#M000002","(msg = nil, &blk)","This is where the magic happens.  This method can take a plain old string, and it will log  it like any",2],["debug","LogBuddy::Utils","classes/LogBuddy/Utils.html#M000005","(obj)","",2],["included","LogBuddy::GemLogger","classes/LogBuddy/GemLogger.html#M000001","(mod)","",2],["init","LogBuddy","classes/LogBuddy.html#M000011","(options = {})","Configure and include LogBuddy into Object. You can pass in any of the following configuration options:",2],["log_gems!","LogBuddy::GemLogger","classes/LogBuddy/GemLogger.html#M000000","()","",2],["log_to_stdout?","LogBuddy","classes/LogBuddy.html#M000014","()","",2],["logger","LogBuddy","classes/LogBuddy.html#M000013","()","",2],["logger","LogBuddy::Mixin","classes/LogBuddy/Mixin.html#M000004","()","",2],["mixin_to_object","LogBuddy","classes/LogBuddy.html#M000012","()","Add the LogBuddy::Mixin to Object instance and class level. ",2],["obj_to_string","LogBuddy::Utils","classes/LogBuddy/Utils.html#M000010","(obj, options = {})","",2],["parse_args","LogBuddy::Utils","classes/LogBuddy/Utils.html#M000008","(logged_line)","Returns array of arguments in the block You must use the brace form (ie d { \"hi\" }) and not do...end",2],["read_line","LogBuddy::Utils","classes/LogBuddy/Utils.html#M000009","(frame)","Return the calling line ",2],["stdout_puts","LogBuddy::Utils","classes/LogBuddy/Utils.html#M000007","(str)","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2008 Relevance, Inc. - http://thinkrelevance.com  Permission is hereby granted, free of",3],["README.markdown","files/README_markdown.html","files/README_markdown.html","","# LogBuddy    ## DESCRIPTION:  log_buddy is your friendly little log buddy at your side, helping you",3],["log_buddy.rb","files/lib/log_buddy_rb.html","files/lib/log_buddy_rb.html","","",3],["gem_logger.rb","files/lib/log_buddy/gem_logger_rb.html","files/lib/log_buddy/gem_logger_rb.html","","",3],["mixin.rb","files/lib/log_buddy/mixin_rb.html","files/lib/log_buddy/mixin_rb.html","","",3],["utils.rb","files/lib/log_buddy/utils_rb.html","files/lib/log_buddy/utils_rb.html","","",3],["version.rb","files/lib/log_buddy/version_rb.html","files/lib/log_buddy/version_rb.html","","",3]],"searchIndex":["logbuddy","gemlogger","mixin","utils","arg_and_blk_debug()","d()","debug()","included()","init()","log_gems!()","log_to_stdout?()","logger()","logger()","mixin_to_object()","obj_to_string()","parse_args()","read_line()","stdout_puts()","license","readme.markdown","log_buddy.rb","gem_logger.rb","mixin.rb","utils.rb","version.rb"]}}